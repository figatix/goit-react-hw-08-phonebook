{"version":3,"file":"static/js/518.fc064334.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/ContactItem/ContactItem.styled.js","redux/contacts/contactSelectors.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 300px;\n\n  margin-bottom: 32px;\n`;\n\nconst StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  :hover input {\n    border: 2px solid #9348b7;\n  }\n`;\n\nconst StyledInputTitle = styled.span`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n\nconst StyledInput = styled.input`\n  height: 32px;\n  padding: 4px 16px;\n  font-weight: 700;\n  color: #9348b7;\n  border: 1px solid #6cb748;\n  transition: border 250ms ease-in-out;\n`;\nconst StyledAddBtn = styled.button`\n  width: 100%;\n  height: 32px;\n  background-color: #9348b7;\n  color: #fff;\n\n  transition: background-color 250ms ease-in-out;\n\n  :hover {\n    background-color: #e1341e;\n  }\n`;\n\nexport { StyledForm, StyledLabel, StyledInputTitle, StyledInput, StyledAddBtn };\n","import styled from 'styled-components';\n\nconst StyledContactItem = styled.li`\n  font-size: 16px;\n  font-weight: 700;\n  color: #ba1972;\n\n  :nth-child(even) {\n    color: #2225dd;\n  }\n`;\n\nconst StyledAddBtn = styled.button`\n  font-size: 16px;\n  height: 24px;\n  padding: 0 12px;\n  margin-left: 12px;\n  border-radius: 10px;\n  background-color: #9348b7;\n  color: #fff;\n\n  transition: background-color 250ms ease-in-out;\n\n  :hover {\n    background-color: #e1341e;\n  }\n`;\n\nexport { StyledContactItem, StyledAddBtn };\n","export const selectContactsState = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n//  ?  FILTER\nexport const selectFilterState = state => state.filter.filter;\n","\nimport React, { useState } from \"react\";\nimport { StyledForm, StyledInput, StyledInputTitle, StyledLabel } from \"./Form.styled\";\nimport { StyledAddBtn } from \"../ContactItem/ContactItem.styled\";\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContactsState } from \"redux/contacts/contactSelectors\";\n\n\nconst ContactForm = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch()\n  const contactsState = useSelector(selectContactsState)\n\n  const onChangeInput = (e) => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  }\n\n  const handlerSubmitForm = (e) => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    }\n\n    const isExist = contactsState.find(\n      person => person.name.toLowerCase() === name.toLowerCase().trim()\n    );\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact))\n    reset()\n  }\n\n  const reset = () => {\n    setName('')\n    setNumber('')\n  }\n\n  return (\n\n    <StyledForm onSubmit={handlerSubmitForm}>\n      <StyledLabel>\n        <StyledInputTitle>Name of contact</StyledInputTitle>\n        <StyledInput\n          name=\"name\"\n          type=\"text\"\n          onChange={onChangeInput}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </StyledLabel>\n\n      <StyledLabel>\n        <StyledInputTitle>Number</StyledInputTitle>\n        <StyledInput\n          name=\"number\"\n          type=\"tel\"\n          value={number}\n          onChange={onChangeInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLabel>\n\n      <StyledAddBtn type=\"submit\">Add contact</StyledAddBtn>\n    </StyledForm>\n  )\n}\n\nexport { ContactForm };\n\n","import styled from 'styled-components';\n\nconst StyledFilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  :hover input {\n    border: 1px solid #9348b7;\n  }\n`;\nconst StyledFilterInputTitle = styled.span`\n  font-style: italic;\n  font-size: 20px;\n  margin-bottom: 8px;\n  text-align: center;\n`;\n\nconst StyledFilterInput = styled.input`\n  height: 32px;\n  width: 300px;\n  padding: 4px 16px;\n  font-style: italic;\n  font-weight: 700;\n  color: #9348b7;\n  border: 1px solid #6cb748;\n  transition: border 250ms ease-in-out;\n`;\n\nexport { StyledFilterLabel, StyledFilterInputTitle, StyledFilterInput };\n","\nimport React from \"react\";\nimport { setFilterState } from \"redux/contacts/filterSlice\";\nimport { StyledFilterInput, StyledFilterInputTitle, StyledFilterLabel } from \"./Filter.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilterState } from \"redux/contacts/contactSelectors\";\n\n\n\nconst Filter = () => {\n  const filterState = useSelector(selectFilterState)\n  const dispatch = useDispatch();\n\n  const onChangeFilter = ({ target: { value } }) => {\n    dispatch(setFilterState(value))\n  }\n\n  return (\n    <StyledFilterLabel>\n      <StyledFilterInputTitle>Find contacts by name</StyledFilterInputTitle>\n      <StyledFilterInput\n        name=\"filter\"\n        value={filterState}\n        onChange={onChangeFilter}\n        type=\"text\"\n      />\n    </StyledFilterLabel>\n  )\n}\n\nexport { Filter };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { StyledAddBtn, StyledContactItem } from \"./ContactItem.styled\";\nimport { useDispatch } from 'react-redux'\n\nimport { deleteContact } from \"redux/contacts/operations\";\n\nconst ContactItem = ({ personName, personNumber, id }) => {\n  const dispatch = useDispatch()\n\n  return (\n    <StyledContactItem>\n      {personName}: {personNumber}\n      <StyledAddBtn\n\n        onClick={() => dispatch(deleteContact(id))}\n        type=\"button\">Delete</StyledAddBtn>\n    </StyledContactItem>\n  )\n}\n\nexport { ContactItem };\n\n\nContactItem.propTypes = {\n  personName: PropTypes.string.isRequired,\n  personNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}","import styled from 'styled-components';\n\nconst StyledContactList = styled.ul`\n  width: 450px;\n  padding: 0 15px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\nexport { StyledContactList };\n","\nimport React, { useEffect } from \"react\";\nimport { ContactItem } from \"../ContactItem/ContactItem\";\nimport { StyledContactList } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectContactsState, selectFilterState } from \"redux/contacts/contactSelectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoggedIn } from \"redux/auth/authSelectors\";\n\n\n\nconst ContactList = () => {\n  const filterState = useSelector(selectFilterState)\n  const contactsState = useSelector(selectContactsState)\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts())\n    }\n  }, [dispatch, isLoggedIn])\n\n  // useEffect(() => {\n  //   const handlerFilterContacts = () => {\n  //     const normalizeName = filterState?.toLowerCase().trim()\n  //     const isContacts = (contactsState.length !== 0);\n  //     return isContacts && contactsState.filter(person => person.name?.toLowerCase().includes(normalizeName))\n  //   }\n  //   handlerFilterContacts();\n  // }, [handlerFilterContacts])\n\n\n  const handlerFilterContacts = () => {\n    const normalizeName = filterState?.toLowerCase().trim()\n    const isContacts = (contactsState.length !== 0);\n    return isContacts && contactsState.filter(person => person.name?.toLowerCase().includes(normalizeName))\n  }\n\n  const filteredContacts = handlerFilterContacts();\n\n  return (\n    <StyledContactList>\n      {filteredContacts &&\n        filteredContacts.map(({ name, id, number }) => {\n          return <ContactItem\n            personName={name}\n            personNumber={number}\n            key={id}\n            id={id}\n          />\n        })}\n    </StyledContactList>\n  )\n}\n\nexport { ContactList };\n\n","\n\n\n\n\nimport styled from 'styled-components'\nimport { useSelector } from \"react-redux\";\nimport { ContactForm } from \"components/Form/Form\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { selectError, selectIsLoading } from 'redux/contacts/contactSelectors';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items:center;\n  padding: 30px 0;\n  max-width:700px;\n  margin: 0 auto;\n`;\n\nconst StyledMainTitle = styled.h1`\n  font-size: 32px;\n  color: #E1341E;\n  margin-bottom: 16px;\n`;\nconst StyledTitle = styled.h2`\n  font-size: 24px;\n  color: #9348B7;\n  margin-bottom: 12px;\n`;\n\nexport { Wrapper, StyledMainTitle, StyledTitle };\n\nexport default function Phonebook() {\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n\n  return (\n    <Wrapper>\n      <StyledMainTitle>Phonebook</StyledMainTitle>\n      <ContactForm />\n      <StyledTitle>Contact List</StyledTitle>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Wrapper>\n  )\n};\n\n\n\n"],"names":["StyledForm","styled","StyledLabel","StyledInputTitle","StyledInput","StyledContactItem","StyledAddBtn","selectContactsState","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilterState","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contactsState","useSelector","onChangeInput","e","target","value","reset","onSubmit","preventDefault","newContact","find","person","toLowerCase","trim","alert","addContact","type","onChange","pattern","title","required","StyledFilterLabel","StyledFilterInputTitle","StyledFilterInput","Filter","filterState","setFilterState","ContactItem","personName","personNumber","id","onClick","deleteContact","StyledContactList","ContactList","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","filteredContacts","normalizeName","length","includes","handlerFilterContacts","map","Wrapper","StyledMainTitle","StyledTitle","Phonebook"],"sourceRoot":""}