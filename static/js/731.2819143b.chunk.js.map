{"version":3,"file":"static/js/731.2819143b.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/inputYupValidation.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["\nexport const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};","import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledRegisterForm = styled.form`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0;\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nexport const StyledRegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n`;\n\nexport const StyledRegisterBtn = styled(Button)`\n  width: 100%;\n`;\n\nexport const StyledRouterLink = styled(Link)`\n  text-decoration: underline;\n`;\n\nexport const styles = {\n  routerLink: {\n    textDecoration: 'underline',\n    color: 'secondary.light',\n  },\n};\n","import * as yup from 'yup';\n\nexport const yupSchema = yup.object().shape({\n  name: yup.string().required('This field is required'),\n  email: yup\n    .string()\n    .required('This field is required')\n    .email('Invalid email format'),\n  password: yup.string().required('This field is required').min(8),\n});\n","\n\nimport { FormHelperText, IconButton, InputAdornment, Link, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { StyledRegisterBtn, StyledRegisterForm, StyledRegisterLabel, styles } from \"./RegisterForm.styled\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupSchema } from \"./inputYupValidation\";\nimport { register } from \"redux/auth/authOperations\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch()\n\n\n  const { register: reactRegister, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(yupSchema) });\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n\n  const onSubmitRegisterForm = (data) => {\n    console.log(\"ðŸš€ ~ file: RegisterForm.jsx:50 ~ onSubmitRegisterForm ~ data:\", data)\n    const { name, password, email } = data\n\n    const userRegister = {\n      name,\n      email,\n      password,\n    }\n\n    dispatch(register(userRegister)).unwrap()\n      .then((res) => {\n        toast.success(`User ${res.user.name} successfully registered!`);\n      }).catch((err) => {\n        toast.error(`Oops! Something went wrong... ${err}`);\n      });\n\n    reset()\n  }\n\n  return (\n    <>\n      <StyledRegisterForm\n        onSubmit={handleSubmit(onSubmitRegisterForm)}\n        autoComplete=\"off\"\n      >\n        <StyledRegisterLabel>\n          <TextField\n            required\n            label=\"Username\"\n            type=\"text\"\n            variant=\"filled\"\n            color=\"secondary\"\n            {...reactRegister(\"name\", { required: 'This field is required.' })}\n          />\n          <FormHelperText\n            component={ErrorMessage}\n            errors={errors}\n            name='name'\n            render={({ message }) => (\n              <Typography sx={{ color: 'error.main', fontSize: \"12px\" }}>{message}</Typography>\n            )}\n          />\n        </StyledRegisterLabel>\n\n        <StyledRegisterLabel >\n          <TextField\n            fullWidth\n            required\n            label=\"Email\"\n            type=\"email\"\n            variant=\"filled\"\n            color=\"secondary\"\n            {...reactRegister(\"email\", { required: 'This field is required.' })}\n          />\n          <FormHelperText\n            component={ErrorMessage}\n            errors={errors}\n            name='email'\n            render={({ message }) => (\n              <Typography sx={{ color: 'error.main', fontSize: \"12px\" }}>{message}</Typography>\n            )}\n          />\n        </StyledRegisterLabel>\n        <StyledRegisterLabel >\n          <TextField\n            fullWidth\n            required\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            variant=\"filled\"\n            color=\"secondary\"\n            {...reactRegister(\"password\", { required: 'This field is required.' })}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>,\n            }}\n          />\n          <FormHelperText\n            component={ErrorMessage}\n            errors={errors}\n            name='password'\n            render={({ message }) => (\n              <Typography sx={{ color: 'error.main', fontSize: \"12px\" }}>{message}</Typography>\n            )}\n          />\n        </StyledRegisterLabel>\n        <StyledRegisterBtn\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n        >Register</StyledRegisterBtn>\n      </StyledRegisterForm>\n\n      <Link component={RouterLink}\n        sx={styles.routerLink}\n        to=\"/login\">\n        Already have an account? Log in\n      </Link>\n    </>\n  );\n};\n","\nimport { Avatar, Box, Typography } from '@mui/material';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Section } from 'components/Section/Section';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function RegisterPage() {\n  return (\n    <Section>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          Sign up\n        </Typography>\n        <RegisterForm />\n      </Box>\n    </Section>\n  );\n}\n"],"names":["styles","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","component","sx","Container","Typography","variant","StyledRegisterForm","styled","StyledRegisterLabel","StyledRegisterBtn","Button","Link","routerLink","textDecoration","color","yupSchema","yup","shape","name","required","email","password","min","RegisterForm","useState","showPassword","setShowPassword","dispatch","useDispatch","useForm","resolver","yupResolver","reactRegister","register","handleSubmit","reset","errors","formState","onSubmit","data","console","log","userRegister","unwrap","then","res","toast","user","catch","err","autoComplete","TextField","label","type","FormHelperText","ErrorMessage","render","message","fontSize","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Visibility","VisibilityOff","RouterLink","to","RegisterPage","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined"],"sourceRoot":""}