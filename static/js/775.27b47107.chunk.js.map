{"version":3,"file":"static/js/775.27b47107.chunk.js","mappings":"mRAEaA,EAAkBC,EAAAA,GAAAA,KAAH,wLAYfC,EAAmBD,EAAAA,GAAAA,MAAH,6FAMhBE,EAAiBF,EAAAA,GAAAA,OAAH,+M,SCXdG,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACH,OAAOX,EAASY,GAElB,IAAK,WACH,OAAOV,EAAYU,GAErB,QAAS,OAEZ,EAyBD,OACE,UAACnB,EAAD,CACEoB,SAzBsB,SAACJ,GACzBA,EAAEK,iBACF,IAAMC,EAAY,CAChBhB,MAAAA,EACAE,SAAAA,GAGFe,QAAQC,IAAI,kEAAyDZ,GAGrEF,GAASe,EAAAA,EAAAA,IAAMH,IACXV,IACFF,GAASgB,EAAAA,EAAAA,OACTV,EAAEW,cAAcC,QAGnB,EAUGC,aAAa,MAFf,WAGE,UAAC3B,EAAD,oBAEE,kBACEiB,MAAOb,EACPwB,SAAUf,EACVgB,KAAK,QAAQb,KAAK,cAEtB,UAAChB,EAAD,uBAEE,kBACEiB,MAAOX,EACPsB,SAAUf,EACVgB,KAAK,WAAWb,KAAK,WACrBW,aAAa,WAGjB,SAAC1B,EAAD,CAAgB4B,KAAK,SAArB,qBAGL,ECrEc,SAASC,IACtB,OACE,4BAEE,uCAEA,SAAC5B,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoginForm = styled.form`\n  width: 320px;\n  /* \n   */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0;\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nexport const StyledLoginLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const StyledLoginBtn = styled.button`\n  width: 100%;\n  height: 32px;\n  background-color: #9348b7;\n  color: #fff;\n\n  transition: background-color 250ms ease-in-out;\n\n  :hover {\n    background-color: #e1341e;\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"redux/auth/authOperations\";\nimport { selectIsLoggedIn } from \"redux/auth/authSelectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nimport { StyledLoginBtn, StyledLoginForm, StyledLoginLabel } from \"./LoginForm.styled\";\n\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n\n  const onLoginInput = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email': {\n        return setEmail(value)\n      }\n      case 'password': {\n        return setPassword(value)\n      }\n      default: return\n    }\n  }\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault()\n    const existUser = {\n      email,\n      password,\n    }\n\n    console.log(\"ðŸš€ ~ file: LoginForm.jsx:14 ~ LoginForm ~ isLoggedIn:\", isLoggedIn)\n\n\n    dispatch(login(existUser))\n    if (isLoggedIn) {\n      dispatch(fetchContacts())\n      e.currentTarget.reset()\n      // reset()\n    }\n  }\n\n  // const reset = () => {\n  //   setEmail('')\n  //   setPassword('')\n  // }\n\n  return (\n    <StyledLoginForm\n      onSubmit={handleLoginSubmit}\n      autoComplete=\"off\">\n      <StyledLoginLabel >\n        Email\n        <input\n          value={email}\n          onChange={onLoginInput}\n          type=\"email\" name=\"email\" />\n      </StyledLoginLabel>\n      <StyledLoginLabel >\n        Password\n        <input\n          value={password}\n          onChange={onLoginInput}\n          type=\"password\" name=\"password\"\n          autoComplete=\"on\"\n        />\n      </StyledLoginLabel>\n      <StyledLoginBtn type=\"submit\">Login</StyledLoginBtn>\n    </StyledLoginForm>\n  );\n};","\n\n\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n\n      <title>Log In</title>\n\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["StyledLoginForm","styled","StyledLoginLabel","StyledLoginBtn","LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","onLoginInput","e","target","name","value","onSubmit","preventDefault","existUser","console","log","login","fetchContacts","currentTarget","reset","autoComplete","onChange","type","LoginPage"],"sourceRoot":""}