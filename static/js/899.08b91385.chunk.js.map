{"version":3,"file":"static/js/899.08b91385.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/inputYupValidation.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["\nexport const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};","import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLoginForm = styled.form`\n  width: 320px;\n  /* \n   */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0;\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nexport const StyledLoginLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n`;\n\nexport const StyledLoginBtn = styled(Button)`\n  width: 100%;\n`;\n\nexport const StyledRouterLink = styled(Link)`\n  text-decoration: underline;\n`;\n\nexport const styles = {\n  routerLink: {\n    textDecoration: 'underline',\n    color: 'secondary.light',\n  },\n};\n","import * as yup from 'yup';\n\nexport const yupSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('This field is required')\n    .email('Invalid email format'),\n  password: yup.string().required('This field is required').min(8),\n});\n","\nimport { FormHelperText, IconButton, InputAdornment, Link, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"redux/auth/authOperations\";\n\nimport { StyledLoginBtn, StyledLoginForm, StyledLoginLabel, styles } from \"./LoginForm.styled\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { yupSchema } from \"./inputYupValidation\";\nimport { toast } from \"react-toastify\";\n\n\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(yupSchema) });\n\n  const onSubmitReactHookForm = async data => {\n    try {\n      const res = await dispatch(login(data)).unwrap();\n      console.log(res);\n      toast.success(`User ${res.user.name} was successfully entered!`)\n      reset()\n    } catch (error) {\n      toast.error(`Something went wrong... ${error}`)\n    }\n  }\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n\n  return (\n    <>\n      <StyledLoginForm\n        onSubmit={handleSubmit(onSubmitReactHookForm)}\n        autoComplete=\"off\">\n        <StyledLoginLabel >\n          <TextField\n            fullWidth\n            required\n            label=\"Email\"\n            type=\"email\"\n            variant=\"filled\"\n            color=\"secondary\"\n            {...register(\"email\", { required: 'This field is required.' })}\n          />\n          <FormHelperText\n            component={ErrorMessage}\n            errors={errors}\n            name='email'\n            render={({ message }) => (\n              <Typography sx={{ color: 'error.main', fontSize: '12px' }}>{message}</Typography>\n            )}\n          />\n        </StyledLoginLabel>\n        <StyledLoginLabel >\n          <TextField\n            required\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            variant=\"filled\"\n            color=\"secondary\"\n            {...register(\"password\", { required: 'This field is required.' })}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>,\n            }}\n          />\n          <FormHelperText\n            component={ErrorMessage}\n            errors={errors}\n            name='password'\n            render={({ message }) => (\n              <Typography sx={{ color: 'error.main', fontSize: \"12px\" }}>{message}</Typography>\n            )}\n          />\n        </StyledLoginLabel>\n\n        <StyledLoginBtn\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n        >Login</StyledLoginBtn>\n\n      </StyledLoginForm>\n\n      <Link component={RouterLink}\n        sx={styles.routerLink}\n        to=\"/register\">\n        Don't have an account? Register\n      </Link>\n    </>\n\n  );\n};\n\n\n","\nimport { Avatar, Box, Typography } from '@mui/material';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Section } from 'components/Section/Section';\n\nexport default function LoginPage() {\n  return (\n    <Section>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          Sign in\n        </Typography>\n        <LoginForm />\n      </Box>\n    </Section>\n  );\n}\n\n"],"names":["styles","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","component","sx","Container","Typography","variant","StyledLoginForm","styled","StyledLoginLabel","StyledLoginBtn","Button","Link","routerLink","textDecoration","color","yupSchema","yup","shape","email","required","password","min","LoginForm","useState","showPassword","setShowPassword","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmitReactHookForm","data","login","unwrap","res","console","log","toast","user","name","onSubmit","autoComplete","TextField","fullWidth","label","type","FormHelperText","ErrorMessage","render","message","fontSize","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Visibility","VisibilityOff","RouterLink","to","LoginPage","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined"],"sourceRoot":""}